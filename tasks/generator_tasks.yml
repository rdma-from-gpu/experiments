---

- name: "Collect time"
  set_fact:
    test_dir: "{{ playbook_dir }}/tmp/{{ this_test }}/{{ lookup('pipe','date --iso-8601=seconds') }}"

- name: "Create test folder {{ test_dir }}"
  file:
    path: "{{ test_dir }}"
    state: directory

- name: Create launch script
  template:
    src: templates/launch_generator.sh.j2
    dest: "{{ test_dir }}/launch_generator.sh"
    mode: 0777
- name: Create launch script for measure_bw.py
  template:
    src: templates/launch_measure_bw.sh.j2
    dest: "{{ test_dir }}/launch_measure_bw.sh"
    mode: 0777
- name: Create launch script for system_load.py
  template:
    src: templates/launch_system_load.sh.j2
    dest: "{{ test_dir }}/launch_system_load.sh"
    mode: 0777
- name: Create launch script for nvidia_stats.sh
  template:
    src: templates/launch_nvidia_stats.sh.j2
    dest: "{{ test_dir }}/launch_nvidia_stats.sh"
    mode: 0777

- name: Run the generator
  block:
    - name: Launch measure_bw.sh
      command: "{{ test_dir }}/launch_measure_bw.sh"
      async: 180 # 3 minutes of runtime
      poll: 0
      register: launch_measure_bw

    - name: Launch system_load.py
      register: launch_system_load
      command: "{{ test_dir }}/launch_system_load.sh"
      async: 180 # 3 minutes of runtime
      poll: 0
    - name: Launch nvidia_stats.sh
      register: launch_nvidia_stats
      command: "{{ test_dir }}/launch_nvidia_stats.sh"
      async: 180 # 4 minutes of runtime
      poll: 0

    - name: Launch generator
      register: launch_generator
      become: true
      command: "{{ test_dir }}/launch_generator.sh"
      async: 180 # up 3 minutes of runtime
      poll: 0


    - name: Wait for generator to finish
      async_status:
        jid: "{{ launch_generator.ansible_job_id }}"
      become: true
      register: job_result
      until: job_result.finished
      retries: 10000
      delay: 5 # check every 5 second

  always:
    - name: Kill background tasks
      become: true
      shell: |
        cat {{ item }} | xargs kill | true
      with_fileglob: "{{ test_dir }}/*.pid"

    - name: save logs
      delegate_to: localhost
      become: no
      copy:
        dest: "{{ test_dir }}/launch_generator.log"
        content: "==== stdout ====\n{{ job_result.stdout }}\n==== stderr ====\n{{ job_result.stderr }}\n"
        mode: 0664
    # - name: save logs 2
    #   delegate_to: localhost
    #   become: no
    #   copy:
    #     dest: "{{ test_dir }}/launch_generator2.log"
    #     content: "==== stdout ====\n{{launch_generator.stdout }}\n==== stderr ====\n{{ launch_generator.stderr }}\n"
    #     mode: 0664
    # - name: show logs 2
    #   debug:
    #     var: launch_generator

    #- name: save bw logs
    #  delegate_to: localhost
    #  become: no
    #  copy:
    #    dest: "{{ test_dir }}/launch_meeasure_bw.log"
    #      #content: "==== stdout ====\n{{ launch_measure_bw.stdout }}\n==== stderr ====\n{{ launch_measure_bw.stderr }}\n"
    #    mode: 0664
    - name: show stdout
      debug:
        var: job_result.stdout
    - name: show stderr
      debug:
        var: job_result.stderr
